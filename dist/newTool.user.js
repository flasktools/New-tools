// ==UserScript==
// @name The Script
// @description A script for grepolis
// @version 0.0.1
// @author Sau1707
// @match https://*.grepolis.com/game/*
// @require http://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js
// ==/UserScript==

const uw = typeof unsafeWindow !== 'undefined' ? unsafeWindow : window;

(() => {
	class Base {
		async subscribe(type, fnt) {
			while (typeof uw.$ === 'undefined') {
				await new Promise((resolve) => setTimeout(resolve, 100));
			}

			uw.$.Observer(GameEvents.window.open).subscribe(fnt.name, (event, data) => {
				if (data?.wnd?.type === type) {
					setTimeout(() => fnt(data.wnd), 50);
				}
			});
		}

		unsubscribe(fnt) {
			$.Observer(GameEvents.window.open).unsubscribe(fnt.name);
		}
	}
	const styles = `
<style>
grepo-icon {
display: block;
margin: 0 5px 0 5px;
float: left;
width: 22px;
height: 23px;
cursor: pointer;
}
</style>`;
	$('head').append(styles);

	class IconButton extends HTMLElement {
		constructor() {
			super();

			console.log($(this));
		}

		connectedCallback() {
			const type = this.getAttribute('type');
			console.log(type);
			let bg, width;

			switch (type) {
				case 'island':
					bg =
						'url(https://gpit.innogamescdn.com/images/game/autogenerated/common/bbcodes/bbcodes_6e4f630.png) no-repeat -405px -5px';
					break;
				case 'message':
					bg = 'url(https://gpit.innogamescdn.com/images/game/button/write_message.png) no-repeat';
					width = '26px';
					break;
			}

			if (width) {
				this.style.width = width;
			}
			this.style.background = bg;

			$(this).mousePopup(new MousePopup(this.getAttribute('type')));
		}
	}

	uw.customElements.define('grepo-icon', IconButton);
	const storage = {
		save: function (key, value) {
			var jsonString = JSON.stringify(value);
			localStorage.setItem(key, jsonString);
		},

		load: function (key, missing) {
			var jsonString = localStorage.getItem(key);
			if (jsonString === null) {
				return missing;
			}
			return JSON.parse(jsonString);
		},

		remove: function (key) {
			localStorage.removeItem(key);
		}
	};
	var translations = {
		greeting: {
			en: 'Hello!',
			fr: 'Bonjour!'
		},
		farewell: {
			en: 'Goodbye!',
			fr: 'Au revoir!'
		}
	};

	const language = typeof Game !== 'undefined' && Game.market_id ? Game.market_id : 'en';
	translations = Object.entries(translations).reduce((acc, [key, value]) => ((acc[key] = value[language]), acc), {});

	class Template extends Base {
		activate() {
			this.subscribe(GPWindowMgr.TYPE_PLAYER_SETTINGS, this.onOpenSettings);
		}

		deactivate() {
			this.unsubscribe(this.onOpenSettings);
		}

		onOpenSettings() {
			console.log('here');
			$('#version').css('position', 'unset');
		}
	}

	uw.template = new Template();
	uw.template.activate();

	class Test extends Base {
		activate() {
			this.subscribe(GPWindowMgr.TYPE_ISLAND, this.main);
		}

		deactivate() {
			this.unsubscribe(this.main);
		}

		main() {
			const message = $('<grepo-icon/>', {
				id: 'myElementId',
				type: 'message'
			});

			message.mousePopup(new MousePopup('Message'));

			message.css({
				position: 'absolute',
				right: '0px',
				top: 26
			});

			$('#island_towns_controls').append(message);

			const island = $('<grepo-icon/>', {
				id: 'myElementId',
				type: 'island'
			});

			island.mousePopup(new MousePopup('Island'));

			island.css({
				position: 'absolute',
				right: '35px',
				top: 26
			});

			$('#island_towns_controls').append(island);
		}
	}

	uw.test = new Test();
	uw.test.activate();
	console.log('%c|= The Script is active =|', 'color: purple; font-size: 1em; font-weight: bolder; ');
})();
